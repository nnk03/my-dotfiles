return {}

-- return {
--   "iamcco/markdown-preview.nvim",
--   cmd = { "MarkdownPreviewToggle", "MarkdownPreview", "MarkdownPreviewStop" },
--   build = "cd app && npm install",
--   init = function()
--     vim.g.mkdp_filetypes = { "markdown" }
--   end,
--   ft = { "markdown" },
-- }
--
-- -- https://github.com/iamcco/markdown-preview.nvim
--
--

-- {
-- 	"toppair/peek.nvim",
-- 	event = { "VeryLazy" },
-- 	build = "deno task --quiet build:fast",
-- 	config = function()
-- 		local peek = require("peek")
--
-- 		peek.setup({
-- 			auto_load = true, -- whether to automatically load preview when
-- 			-- entering another markdown buffer
-- 			close_on_bdelete = true, -- close preview window on buffer delete
--
-- 			syntax = true, -- enable syntax highlighting, affects performance
--
-- 			theme = "dark", -- 'dark' or 'light'
--
-- 			update_on_change = true,
--
-- 			-- app = "webview", -- 'webview', 'browser', string or a table of strings
-- 			app = "browser", -- 'webview', 'browser', string or a table of strings
--
-- 			filetype = { "markdown" }, -- list of filetypes to recognize as markdown
--
-- 			-- relevant if update_on_change is true
-- 			throttle_at = 200000, -- start throttling when file exceeds this
-- 			-- amount of bytes in size
-- 			throttle_time = "auto", -- minimum amount of time in milliseconds
-- 			-- that has to pass before starting new render
-- 		})
--
-- 		local toggle_function = function()
-- 			if peek.is_open() then
-- 				peek.close()
-- 			else
-- 				peek.open()
-- 			end
-- 		end
--
-- 		-- vim.api.nvim_create_user_command("PeekOpen", peek.open, {})
-- 		-- vim.api.nvim_create_user_command("PeekClose", peek.close, {})
-- 		vim.api.nvim_create_user_command("PeekToggle", toggle_function, {})
--
-- 		vim.keymap.set("n", "<leader>pmt", "<Esc>:PeekToggle<CR>", {
-- 			desc = "Toggle Markdown Preview",
-- 		})
-- 	end,
-- },
